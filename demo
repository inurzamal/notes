import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';
import { UntypedFormControl, Validators } from '@angular/forms';
import { MatTableDataSource } from '@angular/material/table';
import { HttpClient } from '@angular/common/http';
import { MatSort } from '@angular/material/sort';
import { MatPaginator } from '@angular/material/paginator';
import { Subscription } from 'rxjs';

export interface RatingElement {
    country: string;
    ratingdate: Date;
    oldcrr: string;
    oldcrroutlook: string;
    oldcrg: string;
    newcrr: string;
    newcrroutlook: string;
    newcrg: string;
    ratingcomment: string;
}

const ELEMENT_DATA: RatingElement[] = [
    {
        country: 'Example Country',
        ratingdate: new Date(),
        oldcrr: 'Old CRR',
        oldcrroutlook: 'Stable',
        oldcrg: 'Old CRG',
        newcrr: 'New CRR',
        newcrroutlook: 'Positive',
        newcrg: 'New CRG',
        ratingcomment: 'Sample comment'
    }
    // Add more items as needed
];

@Component({
    selector: 'app-rating-action',
    templateUrl: './rating-action.component.html',
    styleUrls: ['./rating-action.component.scss']
})
export class RatingActionComponent implements OnInit, OnDestroy {
    selectedValue: string;
    requiredpickerInput = new UntypedFormControl('', [Validators.required]);
    fromDatePickerInput = new UntypedFormControl('', [Validators.required]);
    toDatePickerInput = new UntypedFormControl('', [Validators.required]);

    @ViewChild(MatSort, { static: true }) sort: MatSort;
    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;

    countries: string[] = ['India', 'USA', 'UK', 'South Africa', 'NZ', 'Paris', 'Switzerland', 'Dubai', 'China', 'Australia'];
    displayedColumns: string[] = ['country', 'ratingdate', 'oldcrr', 'oldcrroutlook', 'oldcrg', 'newcrr', 'newcrroutlook', 'newcrg', 'ratingcomment'];
    columnsToDisplay: string[] = this.displayedColumns.slice();
    
    private subscription: Subscription;
    uniqueCountries: string[] = [];
    dataSource = new MatTableDataSource<RatingElement>(ELEMENT_DATA); // Set initial data
    selectedCountry = '';
    fromUpdateDate = '';
    toUpdateDate = '';

    headerMapping = {
        country: 'Country',
        ratingdate: 'Rating Date',
        oldcrr: 'Old CRR',
        oldcrroutlook: 'Old CRR Outlook',
        oldcrg: 'Old CRG',
        newcrr: 'New CRR',
        newcrroutlook: 'New CRR Outlook',
        newcrg: 'New CRG',
        ratingcomment: 'Rating Comment'
    };

    constructor(private http: HttpClient) {}

    ngOnInit(): void {
        this.getdata();
    }

    getdata() {
        this.http.get<RatingElement[]>('../../../assets/json/ratingaction.json').subscribe((response) => {
            this.dataSource = new MatTableDataSource(response);
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
            this.countries = [...new Set(response.map((data) => data.country))];
        });
    }

    showData() {
        this.http.get<RatingElement[]>('../../../assets/json/ratingaction.json', {
            params: {
                country: this.selectedCountry,
                fromUpdateDate: this.fromUpdateDate,
                toUpdateDate: this.toUpdateDate
            }
        }).subscribe((response) => {
            this.dataSource = new MatTableDataSource(response);
            this.dataSource.paginator = this.paginator;
            this.dataSource.sort = this.sort;
        });
    }

    ngOnDestroy(): void {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
}
